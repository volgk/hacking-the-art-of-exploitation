1. Execution
	$ ./pointer_types
	[integer pointer] points to 0x7fffcd186c10, wich contains the integer 1
	[integer pointer] points to 0x7fffcd186c14, wich contains the integer 2
	[integer pointer] points to 0x7fffcd186c18, wich contains the integer 3
	[integer pointer] points to 0x7fffcd186c1c, wich contains the integer 4
	[integer pointer] points to 0x7fffcd186c20, wich contains the integer 5
	[char pointer] points to 0x7fffcd186c33, wich contains the char 'a'
	[char pointer] points to 0x7fffcd186c34, wich contains the char 'b'
	[char pointer] points to 0x7fffcd186c35, wich contains the char 'c'
	[char pointer] points to 0x7fffcd186c36, wich contains the char 'd'
	[char pointer] points to 0x7fffcd186c37, wich contains the char 'e'
	
	// Integer  -> 4 bytes
	// Char	    -> 1 byte

2. Compile the pointer_types2
	$ gcc -g pointer_types2.c -o pointer_type2
	pointer_types2.c: In function 'main':
	pointer_types2.c:12:15: warning: assignment to 'char *' from incompatible pointer type 'int*' -Wincompatible-pointer-types]
	  char_pointer = int_array;
	               ^
	 pointer_types2.c:13:14: warning: assignment to 'int *' from incompatible pointer type 'char *' -Wincompatible-pointer-types]
	  int_pointer = char_array;
	       
3. Check execution of pointer_types2
	$ ./pointer_types2
	[integer pointer] points to 0x7ffdd47e6733, wich contains the char a
	[integer pointer] points to 0x7ffdd47e6737, wich contains the char e
	[integer pointer] points to 0x7ffdd47e673b, wich contains the char 2
	[integer pointer] points to 0x7ffdd47e673f, wich contains the char �
	[integer pointer] points to 0x7ffdd47e6743, wich contains the char �
	[char pointer] points to 0x7ffdd47e6710, wich contains the integer '1'
	[char pointer] points to 0x7ffdd47e6711, wich contains the integer '0'
	[char pointer] points to 0x7ffdd47e6712, wich contains the integer '0'
	[char pointer] points to 0x7ffdd47e6713, wich contains the integer '0'
	[char pointer] points to 0x7ffdd47e6714, wich contains the integer '2'

// Unexpected results

4. Execution of pointer_types3
	$ ./pointer_types3
	[integer pointer] points to 0x7ffdbb79ca63, wich contains the char a
	[integer pointer] points to 0x7ffdbb79ca64, wich contains the char b
	[integer pointer] points to 0x7ffdbb79ca65, wich contains the char c
	[integer pointer] points to 0x7ffdbb79ca66, wich contains the char d
	[integer pointer] points to 0x7ffdbb79ca67, wich contains the char e
	[char pointer] points to 0x7ffdbb79ca40, wich contains the integer '1'
	[char pointer] points to 0x7ffdbb79ca44, wich contains the integer '2'
	[char pointer] points to 0x7ffdbb79ca48, wich contains the integer '3'
	[char pointer] points to 0x7ffdbb79ca4c, wich contains the integer '4'
	[char pointer] points to 0x7ffdbb79ca50, wich contains the integer '5'

	// Pointers must be typecast before doing pointer arithmetic

5. Execution of pointer_types4
	$ ./pointer_types4
	[integer pointer] points to 0x7ffecd7f0bc3, wich contains the char a
	[integer pointer] points to 0x7ffecd7f0bc4, wich contains the char b
	[integer pointer] points to 0x7ffecd7f0bc5, wich contains the char c
	[integer pointer] points to 0x7ffecd7f0bc6, wich contains the char d
	[integer pointer] points to 0x7ffecd7f0bc7, wich contains the char e
	[char pointer] points to 0x7ffecd7f0ba0, wich contains the integer '1'
	[char pointer] points to 0x7ffecd7f0ba4, wich contains the integer '2'
	[char pointer] points to 0x7ffecd7f0ba8, wich contains the integer '3'
	[char pointer] points to 0x7ffecd7f0bac, wich contains the integer '4'
	[char pointer] points to 0x7ffecd7f0bb0, wich contains the integer '5'
	
	// A void point is typless
	
	// The void pointer is really just holding the memory addresses, while
	// the hard-coded typecasting is telling the compiler to use the proper
	// types whenever the pointer is used.

6. Execution of pointer_types5
	$ ./pointer_types5
	Segmentation fault

	// ??? 

	// The compiler is the only thing that cares about a variable's type.
